Reference Story No.,Pool,Story Source,Story Summary (25–50 words)
1,1,EECS 168 FA24,"Implemented a command‑line program in Python to read integers from stdin, validate input, and output summary statistics (min, max, mean). Included unit tests for edge cases like empty input and single element lists, and simple exception handling for malformed tokens."
2,1,EECS 268 SP24,"Wrote a small Python function to perform binary search over a sorted vector and return the index or −1. Added doctest unit tests, measured average time over 10,000 runs, and documented time complexity and assumptions in a brief README for classmates."
3,1,Personal Project,"Fixed a CSS layout bug where a mobile navbar overlapped content on iPhone SE. Added a sticky header, adjusted z‑index, and simplified flex rules. Verified behavior across Chrome, Firefox, Safari responsive views with Lighthouse basic audits and screenshots for regression."
4,2,EECS 348 FA24,"Created a REST endpoint in Node.js/Express to accept JSON payloads, validate schema with Zod, and save records to SQLite. Implemented request logging middleware, basic error handling, and a Postman collection with positive and negative test cases for grading."
5,2,Internship SU25,"Wrote a Python script using pandas to transform CSV usage data into weekly aggregates and publish a summary table as HTML. Automated execution via cron, added email notification on failure, and documented configuration variables in a concise README for handoff."
6,2,EECS 581 Project 1,"Built a responsive landing page section with a hero, call‑to‑action, and features grid in React. Implemented keyboard focus order, ARIA labeling for the button group, and tested Lighthouse accessibility, achieving score improvements from 74 to 95 without design changes."
7,3,EECS 268 SP24,"Implemented a linked‑list based queue with enqueue, dequeue, peek, and iterator support in C++. Included big‑O analysis, memory diagrams, and a unit test suite covering boundary conditions like empty queue operations and iterator invalidation after modifications."
8,3,Personal Project,"Added JWT‑based authentication to a Flask API with login, refresh, and logout endpoints. Configured token expiration, secure cookie transport in development, and role checks for admin routes. Wrote pytest tests for token issuance, refresh flows, and unauthorized access handling."
9,3,EECS 581 Project 2,"Designed and implemented a normalized PostgreSQL schema for a small inventory app: products, categories, suppliers, and stock movements. Added primary/foreign keys, indices on lookup columns, and basic seed data plus SQL queries for common reporting tasks."
10,5,EECS 348 FA24,"Refactored a React component tree to lift state and eliminate prop drilling using Context API. Split large components into smaller presentational pieces, added memoization to reduce unnecessary re‑renders, and measured a 25% improvement in render time under simulated load."
11,5,Internship SU25,"Created a CI workflow in GitHub Actions to run tests, linting, and build for a Django app. Added caching for pip and node_modules, parallelized jobs, and configured status checks as branch protections to prevent merging failing pull requests."
12,5,EECS 581 Project 1,"Implemented a robust file upload flow with client‑side validation, server‑side size limits, and virus scanning stub. Added progress indicators, retry logic for transient network failures, and error states with actionable messages to improve UX during poor connectivity."
13,8,EECS 581 Project 2,"Built a role‑based admin dashboard with user management, pagination, and search. Introduced optimistic UI updates, audit logging for critical actions, and server‑side filtering to maintain performance on larger datasets. Documented permissions matrix and provided seeded demo accounts."
14,8,Personal Project,"Implemented an event‑driven notifications service using Celery and Redis to send email and in‑app alerts. Added idempotency keys to avoid duplicate sends, metrics for throughput, and retry policies with exponential backoff for transient SMTP failures."
15,8,EECS 563 FA24,"Developed a basic TCP client‑server demo in Python to simulate request/response latency, packet loss, and retries. Collected timing statistics, graphed results, and wrote a brief analysis explaining effects of exponential backoff and jitter on tail latency."
16,13,EECS 581 Project 2,"Implemented OAuth 2.0 login via Google for a web app with consent screen, scopes, and token exchange. Added secure session management, sign‑out, token refresh, and a migration path for existing local accounts, including data linking and account recovery flow."
17,13,Internship SU25,"Designed and deployed a small microservice on AWS using ECS Fargate, an RDS PostgreSQL instance, and Application Load Balancer. Wrote Terraform for infrastructure, implemented health checks and auto‑scaling policies, and configured centralized CloudWatch logging and alarms."
18,13,Personal Project,"Built a full‑stack CRUD web application with React, FastAPI, and PostgreSQL. Added unit and integration tests, seeded demo data, Dockerized services with Compose, and configured reverse proxy with Nginx. Deployed to a low‑cost VPS and documented operations playbook."
